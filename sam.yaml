Transform: AWS::Serverless-2016-10-31
Description: "Alexa framework for n00bs"

Parameters:
  BucketName:
    Type: String
    
  AlexaApplicationID:
    Type: String
  
  KmsKey:
    Type: String
  
  SecurityGorupId:
    Type: String

  SubnetId1:
    Type: String

  SubnetId2:
    Type: String

Resources:
  bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName

# IAM roles
  alexaFrameworkForn00bsRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      Policies:
        - PolicyName: "alexa_for_n00bs_framework_s3_bucket"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - "s3:GetObject"
                  - "s3:ListBucket"
                Resource: !Sub arn:aws:s3:::${BucketName}/*
        - PolicyName: "alexa_for_n00bs_framework_ssm_params"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - "ssm:GetParametersByPath"
                  - "ssm:GetParameters"
                  - "ssm:GetParameter"
                Resource: 
                  - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/config/alexa-for-n00bs/*
        - PolicyName: "alexa_for_n00bs_framework_kms"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - "kms:Decrypt"
                Resource: !Sub arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/${KmsKey}



# lambda functions

  alexaFrameworkForN00bs:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: alexa-framework-for-n00bs
      Description: "This is a framework for n00bs so they don't need to learn alexa but still be able to create skills"
      Handler: main
      Role: !GetAtt alexaFrameworkForn00bsRole.Arn
      Runtime: go1.x
      MemorySize: 512
      Timeout: 5
      CodeUri: ./source/deployment.zip
      Events:
        Alexa:
         Type: AlexaSkill
      Environment:
        Variables:
          ALEXA_APPLICATION_ID: !Ref AlexaApplicationID
          BUCKET_NAME: !Ref BucketName
      VpcConfig:
        SecurityGroupIds:
          - !Ref SecurityGorupId
        SubnetIds:
          - !Ref SubnetId1
          - !Ref SubnetId2


#Outputs:
#  lambdaarn:
#    Description: The Lambda ARN that you will put in the alexa console
#    Value: !Sub no-clue-what-to-use-atm

